name: üê≥ Build Docker Image

on:
  workflow_call:
    inputs:
      ref:
        type: string
        required: true
        description: "The ref to build the image from. (usually this is a release tag, e.g. v4.0.1)"
      imageTag:
        type: string
        required: true
        description: "The tag for the docker image. (usually a version tag without leading 'v')"
    secrets:
      GH_BOT_USER:
        required: true
      GH_BOT_PAT:
        required: true
      CR_PAT:
        required: true
      FONTAWESOME_NPM_AUTH_TOKEN:
        required: false

jobs:
  build-amd64-docker-image:
    name: Build amd64 Docker Image for ${{ inputs.imageTag }}
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_BOT_PAT }}
          ref: ${{ inputs.ref }}

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and Publish Docker Image @:latest and @:v_._._
        env:
          FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}
          PLATFORM: "linux/amd64"
        run: |
          # compose image ID and change all uppercase to lowercase
          IMAGE_ID=ghcr.io/${{ github.repository }}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # get version and strip v from the front
          VERSION=${{ inputs.imageTag }}-amd64

          if [[ -z "$FONTAWESOME_NPM_AUTH_TOKEN" ]] ; \
            then docker buildx build . \
                  --file Dockerfile \
                  --tag $IMAGE_ID:latest \
                  --tag $IMAGE_ID:$VERSION \
                  --platform $PLATFORM \
                  --push ; \
            else docker buildx build . \
                  --file Dockerfile \
                  --tag $IMAGE_ID:latest \
                  --tag $IMAGE_ID:$VERSION \
                  --secret id=fontawesome_token,env=FONTAWESOME_NPM_AUTH_TOKEN \
                  --platform $PLATFORM \
                  --push ; \
          fi



  build-arm64-docker-image:
    name: Build arm64 Docker Image for ${{ inputs.imageTag }}
    runs-on: dotbase-arm-runner
    steps: 
        - name: Checkout Repository
          uses: actions/checkout@v3
          with:
            token: ${{ secrets.GH_BOT_PAT }}
            ref: ${{ inputs.ref }}
  
        - uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.CR_PAT }}
  
        - name: Build and Publish Docker Image @:latest and @:v_._._
          env:
            FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}
            PLATFORM: "linux/arm64"
          run: |
            # compose image ID and change all uppercase to lowercase
            IMAGE_ID=ghcr.io/${{ github.repository }}
            IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
  
            # get version and strip v from the front
            VERSION=${{ inputs.imageTag }}-arm64
  
            if [[ -z "$FONTAWESOME_NPM_AUTH_TOKEN" ]] ; \
              then docker buildx build . \
                    --file Dockerfile \
                    --tag $IMAGE_ID:latest \
                    --tag $IMAGE_ID:$VERSION \
                    --platform $PLATFORM \
                    --push ; \
              else docker buildx build . \
                    --file Dockerfile \
                    --tag $IMAGE_ID:latest \
                    --tag $IMAGE_ID:$VERSION \
                    --secret id=fontawesome_token,env=FONTAWESOME_NPM_AUTH_TOKEN \
                    --platform $PLATFORM \
                    --push ; \
            fi

  create-docker-manifest:
    needs: [build-amd64-docker-image, build-arm64-docker-image]
    runs-on: ubuntu-latest
    name: Create and build docker manifest
    steps:
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      - name: Create Docker Manifest
        uses: int128/docker-manifest-create-action@v2.4.0
        with:
          tags: ghcr.io/${{ github.repository }}:${{inputs.imageTag}}
          sources: |
            ghcr.io/${{ github.repository }}:${{inputs.imageTag}}-amd64
            ghcr.io/${{ github.repository }}:${{inputs.imageTag}}-arm64
